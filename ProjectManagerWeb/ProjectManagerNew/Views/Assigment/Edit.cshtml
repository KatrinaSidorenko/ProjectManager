@using Core.Models
@using Core.ViewModels
@using Core.Enums
@using Microsoft.AspNetCore.Identity

@inject UserManager<AppUser> UserManager

@model AssigmentEditViewModel

<div class="row position-relative m-5 text-center">
    <h1 class="text-center" >Edit assigment page</h1>
    @if (TempData["Error"] != null)
    {
        <div class="col-md-12 alert alert-danger">
            <span><b>Sorry!</b> - @TempData["Error"]</span>
        </div>
    }
    <div class="row">
        <div class="col-md-8 offset-2">
            <form method="post" asp-action="EditAssigment" enctype="multipart/form-data">
                <input type="hidden" id="Id" name="Id" value="@Model.Id"/>
                <input type="hidden" id="CurrentProjectId" name="CurrentProjectId" value="@Model.CurrentProjectId" />
                <input type="hidden" id="AssigmentProject" name="AssigmentProject" value="@Model.AssigmentProject" />
                <div class="form-group m-2">
                    <label asp-for="Name">Name</label>
                    <input asp-for="Name" class="form-control" placeholder="Name">
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group m-2">
                    <label asp-for="Description">Description</label>
                    <input asp-for="Description" class="form-control" placeholder="Description">
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group m-2">
                    <label asp-for="Status">Task status</label>
                    <select asp-for="Status" asp-items="@Html.GetEnumSelectList<AssigmentStatus>()" class="form-control">
                        <option selected="selected" value="">--Select--</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="form-group m-2">
                    <label asp-for="StartDate">StartDate</label>
                    <input asp-for="StartDate" class="form-control" placeholder="StartDate">
                    <span asp-validation-for="StartDate" class="text-danger"></span>
                </div>
                <div class="form-group m-2">
                    <label asp-for="EndDate">EndDate</label>
                    <input asp-for="EndDate" class="form-control" placeholder="EndDate">
                    <span asp-validation-for="EndDate" class="text-danger"></span>
                </div>
                <div class="form-group m-2">
                    <label asp-for="Priority">Priority</label>
                    <input asp-for="Priority" class="form-control" placeholder="Priority">
                    <span asp-validation-for="Priority" class="text-danger"></span>
                </div>
                <h5>Responsible users for task compliting: </h5>
                @foreach(var executor in Model.ResponsibleUsersCheckboxes)
                {
                    <div class="form-check">
                        <input class="form-check-input"
                        type="checkbox" 
                        value="@executor.Value.Id"
                        name="ResponsibleUsers"
                        id="checkbox_@executor.Value.Id"
                        checked ="@executor.IsActive">
                        @{
                            var user = await UserManager.FindByIdAsync(executor.Value.Id);
                            var executorRole = await UserManager.GetRolesAsync(user);
                        }
                        <label class="form-check-label" for="checkbox_@executor.Value.Id">
                            @executor.Description, Role: @executorRole.FirstOrDefault()
                        </label>
                    </div>
                }
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>
</div>